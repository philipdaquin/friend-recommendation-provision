


apiVersion: v1
kind: Namespace
metadata:
  name:  neo4j
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: neo4j-configmap
  namespace: neo4j

data:
  NEO4J_PASSWORD: password
  NEO4J_HOST: username
  NEO4J_ALLOW_UPGRADE: "true"

---



apiVersion: apps/v1
kind: Deployment
metadata:
  name:  neo4j-db
  namespace: neo4j
  labels:
    app:  neo4j-db
spec:
  selector:
    matchLabels:
      app: neo4j-db
  replicas: 1
  template:
    metadata:
      labels:
        app:  neo4j-db
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name:  neo4j-db
        image:  bitnami/neo4j

        env:
        - name: NEO4J_PASSWORD
          valueFrom:
            configMapKeyRef:
              name:  neo4j-configmap
              key: NEO4J_PASSWORD
        - name: NEO4J_HOST
          valueFrom:
            configMapKeyRef:
              name:  neo4j-configmap
              key: NEO4J_HOST
        - name: NEO4J_ALLOW_UPGRADE
          valueFrom:
            configMapKeyRef:
              name:  neo4j-configmap
              key: NEO4J_ALLOW_UPGRADE
        ports:
        - containerPort:  7474
          name:  http
        - containerPort:  7678
          name:  bolt
        - containerPort:  7473
          name:  https
        volumeMounts:
        - name: neo4j-data
          mountPath: "/var/lib/neo4j/data"